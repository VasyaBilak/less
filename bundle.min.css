.clean {
  padding: 0;
  margin: 0;
}
.clean-list {
  padding: 0;
  margin: 0;
  list-style: none;
}
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  src: local('Roboto'), local('Roboto-Regular'), url(https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxP.ttf) format('truetype');
}
html,
body {
  padding: 0;
  margin: 0;
  width: 100%;
  font-family: 'Roboto', sans-serif;
  color: #000;
}
h1,
h2,
h3,
h4,
h5,
h6,
p {
  padding: 0;
  margin: 0;
}
a {
  text-decoration: none;
}
.view-port {
  width: 1000px;
  margin: 0 auto;
}
.wrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
  overflow: hidden;
  background-color: #fff;
}

.clean {
  padding: 0;
  margin: 0;
}
.clean-list {
  padding: 0;
  margin: 0;
  list-style: none;
}
#nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 80px;
}
#nav .left i {
  position: relative;
  top: 2px;
  margin-right: 20px;
  font-size: 25px;
  cursor: pointer;
}
#nav .left span {
  font-size: 20px;
  font-weight: bold;
}
#nav .right {
  display: flex;
}
#nav .right .phone {
  margin-right: 25px;
  padding: 5px 15px;
  text-align: center;
  border-radius: 10px;
  background-color: #ffd200;
}
#nav .right .phone span {
  font-size: 14px;
  border-bottom: 1px dotted #000;
}
#nav .right i {
  font-size: 25px;
  cursor: pointer;
}

.clean {
  padding: 0;
  margin: 0;
}
.clean-list {
  padding: 0;
  margin: 0;
  list-style: none;
}


/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpYWxzL21peGlucy5sZXNzIiwiYnVuZGxlLm1pbi5jc3MiLCIuLi8uLi9odHRwczovZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG8iLCJtYWluLmxlc3MiLCJuYXYubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxVQUFBO0NDQ0g7QURFRDtFQUpJLFdBQUE7RUFDQSxVQUFBO0VBS0EsaUJBQUE7Q0NDSDtBQ1JEO0VBQ0Usc0JBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsdUlBQUE7Q0RVRDtBRVZEOztFSEhJLFdBQUE7RUFDQSxVQUFBO0VHSUEsWUFBQTtFQUNBLGtDQUFBO0VBQ0EsWUFBQTtDRmNIO0FFWEQ7Ozs7Ozs7RUhWSSxXQUFBO0VBQ0EsVUFBQTtDQzhCSDtBRWpCRDtFQUNJLHNCQUFBO0NGbUJIO0FFaEJEO0VBQ0ksY0FBQTtFQUNBLGVBQUE7Q0ZrQkg7QUVmRDtFQUNJLGNBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLHVCQUFBO0NGaUJIOztBRDlDRDtFQUNJLFdBQUE7RUFDQSxVQUFBO0NDaURIO0FEOUNEO0VBSkksV0FBQTtFQUNBLFVBQUE7RUFLQSxpQkFBQTtDQ2lESDtBR3JERDtFQUNJLGNBQUE7RUFDQSwrQkFBQTtFQUNBLG9CQUFBO0VBQ0EsYUFBQTtDSHVESDtBR3BETztFQUNJLG1CQUFBO0VBQ0EsU0FBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtDSHNEWDtBR25ETztFQUNJLGdCQUFBO0VBQ0Esa0JBQUE7Q0hxRFg7QUdqREc7RUFDSSxjQUFBO0NIbURQO0FHakRPO0VBQ0ksbUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0Esb0JBQUE7RUFDQSwwQkFBQTtDSG1EWDtBR2pEVztFQUNJLGdCQUFBO0VBQ0EsK0JBQUE7Q0htRGY7QUcvQ087RUFDSSxnQkFBQTtFQUNBLGdCQUFBO0NIaURYOztBRDNGRDtFQUNJLFdBQUE7RUFDQSxVQUFBO0NDOEZIO0FEM0ZEO0VBSkksV0FBQTtFQUNBLFVBQUE7RUFLQSxpQkFBQTtDQzhGSCIsImZpbGUiOiJidW5kbGUubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jbGVhbiB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4uY2xlYW4tbGlzdCB7XHJcbiAgICAuY2xlYW47XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG4uZmxleC1jZW50ZXIoQGRpcjogY29sdW0pIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogQGRpcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufSIsIi5jbGVhbiB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cbi5jbGVhbi1saXN0IHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBzcmM6IGxvY2FsKCdSb2JvdG8nKSwgbG9jYWwoJ1JvYm90by1SZWd1bGFyJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvcm9ib3RvL3YxOC9LRk9tQ25xRXU5MkZyMU11NG14UC50dGYpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbn1cbmh0bWwsXG5ib2R5IHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogIzAwMDtcbn1cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnAge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuLnZpZXctcG9ydCB7XG4gIHdpZHRoOiAxMDAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuLndyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cblxuLmNsZWFuIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuLmNsZWFuLWxpc3Qge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG4jbmF2IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDgwcHg7XG59XG4jbmF2IC5sZWZ0IGkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMnB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMjVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuI25hdiAubGVmdCBzcGFuIHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbiNuYXYgLnJpZ2h0IHtcbiAgZGlzcGxheTogZmxleDtcbn1cbiNuYXYgLnJpZ2h0IC5waG9uZSB7XG4gIG1hcmdpbi1yaWdodDogMjVweDtcbiAgcGFkZGluZzogNXB4IDE1cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZDIwMDtcbn1cbiNuYXYgLnJpZ2h0IC5waG9uZSBzcGFuIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkICMwMDA7XG59XG4jbmF2IC5yaWdodCBpIHtcbiAgZm9udC1zaXplOiAyNXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5jbGVhbiB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cbi5jbGVhbi1saXN0IHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG4iLG51bGwsIkBpbXBvcnQgXCJwYXJ0aWFscy9wYXJhbXMubGVzc1wiO1xyXG5AaW1wb3J0IFwicGFydGlhbHMvbWl4aW5zLmxlc3NcIjtcclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG8nKTtcclxuXHJcbmh0bWwsIGJvZHkge1xyXG4gICAgLmNsZWFuO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XHJcbiAgICBjb2xvcjogQGZvbnQtY29sb3I7XHJcbn1cclxuXHJcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAge1xyXG4gICAgLmNsZWFuO1xyXG59XHJcblxyXG5hIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuLnZpZXctcG9ydCB7XHJcbiAgICB3aWR0aDogQHZpZXctcG9ydDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG4ud3JhcHBlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IEBtYWluLWJnLWNvbG9yOztcclxufSIsIkBpbXBvcnQgXCJwYXJ0aWFscy9wYXJhbXMubGVzc1wiO1xyXG5AaW1wb3J0IFwicGFydGlhbHMvbWl4aW5zLmxlc3NcIjtcclxuXHJcbiNuYXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IEBuYXYtaGVpZ2h0O1xyXG5cclxuICAgICYgLmxlZnQge1xyXG4gICAgICAgICYgaSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgdG9wOiAycHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmIHNwYW4ge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmIC5yaWdodCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuXHJcbiAgICAgICAgJiAucGhvbmUge1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDI1cHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxNXB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBwcmltYXJ5LWNvbG9yO1xyXG5cclxuICAgICAgICAgICAgJiBzcGFuIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQgIzAwMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiBpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSJdfQ== */
